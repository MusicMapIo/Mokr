#! /usr/bin/env node

var app = require('commander');
var Logger = require('../lib/logger');
var chalk = require('chalk');
var init = require('../lib/commands/init');

app.option('-d --debug', 'Set the log level to debug');
app.option('-c --chdir <dir>', 'Change the current working directory');
app.parse(process.argv);

// Set the root dir
if (app.chdir) {
	process.chdir(app.chdir);
}

// Setup logger
var logger = Logger(app);
var cwd = process.cwd();
logger.debug('cwd: ' + cwd);

init.buildAndRunPrompts(cwd, function (err, answers) {
	if (err) {
		return logger.error(err);
	}
	step1(answers, cwd, function () {
		logger.notice('Mokr is ready to go!');
		logger.notice('Now run `mokr create <name>` to strea a fixture.');
	});
});

function step1 (answers, cwd, done) {
	// If we need to npm init, do it before the rest
	if (answers.npmInit) {
		logger.notice('No package.json, running npm init');
		return init.npmInit(cwd, function (err) {
			if (err) {
				return done(err);
			}

			step2(answers, cwd, done);
		});
	}

	step2(answers, cwd, done);
}

function step2 (answers, cwd, done) {
	// No init, but faker
	if (answers.installFaker) {
		return init.installFaker(cwd, function (err) {
			if (err) {
				return done(err);
			}

			logger.notice('Installed faker');
			step3(answers, cwd, done);
		});
	}

	step3(answers, cwd, done);
}

function step3 (answers, cwd, done) {
	// Neither init or faker
	init.createMokrStuff(cwd, function (err) {
		if (err) {
			return done(err);
		}
		logger.notice(chalk.white('Created ./mokr/fixtures'));
		logger.notice(chalk.white('Created ./mokr/data'));
		logger.notice(chalk.white('Created ./mokr/.mokr'));
		done();
	});
}
